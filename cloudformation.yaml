AWSTemplateFormatVersion: '2010-09-09'
Description: 'OwnTracks Lambda Deployment with Static File Serving'

Parameters:
  LambdaCodeBucket:
    Type: String
    Description: S3 bucket containing the Lambda deployment package
  LambdaCodeKey:
    Type: String
    Description: S3 key for the Lambda deployment package
    Default: lambda.zip

Resources:
  OwnTracksUsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: OwnTracksUsers
      AttributeDefinitions:
        - AttributeName: username
          AttributeType: S
      KeySchema:
        - AttributeName: username
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  OwnTracksLocationsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: OwnTracksLocations
      AttributeDefinitions:
        - AttributeName: username
          AttributeType: S
        - AttributeName: friend_group
          AttributeType: S
      KeySchema:
        - AttributeName: username
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: FriendGroupIndex
          KeySchema:
            - AttributeName: friend_group
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST

  OwnTracksLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:Query
                Resource:
                  - !GetAtt OwnTracksUsersTable.Arn
                  - !GetAtt OwnTracksLocationsTable.Arn
                  - !Sub '${OwnTracksLocationsTable.Arn}/index/*'

  OwnTracksLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: OwnTracksServer
      Handler: index.handler
      Role: !GetAtt OwnTracksLambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaCodeBucket
        S3Key: !Ref LambdaCodeKey
      Runtime: nodejs22.x
      Environment:
        Variables:
          DYNAMO_MODE: 'true'
          CODE_KEY: !Ref LambdaCodeKey
      Timeout: 10
      MemorySize: 128

  OwnTracksApiGateway:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: OwnTracksApi
      ProtocolType: HTTP

  OwnTracksApiIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref OwnTracksApiGateway
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OwnTracksLambdaFunction.Arn}/invocations
      PayloadFormatVersion: '2.0'

  OwnTracksApiRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref OwnTracksApiGateway
      RouteKey: 'POST /pub'
      Target: !Sub integrations/${OwnTracksApiIntegration}

  OwnTracksApiRootRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref OwnTracksApiGateway
      RouteKey: 'GET /'
      Target: !Sub integrations/${OwnTracksApiIntegration}

  OwnTracksApiStaticRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref OwnTracksApiGateway
      RouteKey: 'GET /{proxy+}'
      Target: !Sub integrations/${OwnTracksApiIntegration}

  OwnTracksApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref OwnTracksApiGateway
      AutoDeploy: true
      StageName: prod

  OwnTracksLambdaApiGatewayInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OwnTracksLambdaFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${OwnTracksApiGateway}/*/*

Outputs:
  OwnTracksApiEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value: !Sub https://${OwnTracksApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod/
  OwnTracksUsersTableArn:
    Description: ARN of the Users DynamoDB Table
    Value: !GetAtt OwnTracksUsersTable.Arn
  OwnTracksLocationsTableArn:
    Description: ARN of the Locations DynamoDB Table
    Value: !GetAtt OwnTracksLocationsTable.Arn
